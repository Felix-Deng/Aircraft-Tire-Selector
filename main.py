# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'QT_Designer.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import csv 
import time 
import datetime 
from typing import Dict 
from scipy import constants

import optimizer 
from models import Tire 

from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def __init__(self) -> None:
        self.time_complete = None 

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(822, 544)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setObjectName("tabWidget")
        self.Model = QtWidgets.QWidget()
        self.Model.setObjectName("Model")
        self.frame = QtWidgets.QFrame(self.Model)
        self.frame.setGeometry(QtCore.QRect(10, -10, 781, 480))
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.groupBox = QtWidgets.QGroupBox(self.frame)
        self.groupBox.setGeometry(QtCore.QRect(470, 20, 301, 181))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.groupBox.setFont(font)
        self.groupBox.setObjectName("groupBox")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.groupBox)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.label_12 = QtWidgets.QLabel(self.groupBox)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.label_12.setFont(font)
        self.label_12.setObjectName("label_12")
        self.verticalLayout.addWidget(self.label_12)
        self.label_13 = QtWidgets.QLabel(self.groupBox)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.label_13.setFont(font)
        self.label_13.setObjectName("label_13")
        self.verticalLayout.addWidget(self.label_13)
        self.label_14 = QtWidgets.QLabel(self.groupBox)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.label_14.setFont(font)
        self.label_14.setObjectName("label_14")
        self.verticalLayout.addWidget(self.label_14)
        self.label_15 = QtWidgets.QLabel(self.groupBox)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.label_15.setFont(font)
        self.label_15.setObjectName("label_15")
        self.verticalLayout.addWidget(self.label_15)
        self.label_16 = QtWidgets.QLabel(self.groupBox)
        font = QtGui.QFont()
        font.setPointSize(13)
        self.label_16.setFont(font)
        self.label_16.setObjectName("label_16")
        self.verticalLayout.addWidget(self.label_16)
        self.verticalLayout_2.addLayout(self.verticalLayout)
        self.groupBox_8 = QtWidgets.QGroupBox(self.frame)
        self.groupBox_8.setGeometry(QtCore.QRect(19, 330, 431, 140))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.groupBox_8.setFont(font)
        self.groupBox_8.setObjectName("groupBox_8")
        self.textBrowser_model_2 = QtWidgets.QTextBrowser(self.groupBox_8)
        self.textBrowser_model_2.setGeometry(QtCore.QRect(10, 30, 411, 100))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.textBrowser_model_2.setFont(font)
        self.textBrowser_model_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.textBrowser_model_2.setObjectName("textBrowser_model_2")
        self.groupBox_12 = QtWidgets.QGroupBox(self.frame)
        self.groupBox_12.setGeometry(QtCore.QRect(470, 210, 301, 261))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.groupBox_12.setFont(font)
        self.groupBox_12.setObjectName("groupBox_12")
        self.textBrowser_model = QtWidgets.QTextBrowser(self.groupBox_12)
        self.textBrowser_model.setGeometry(QtCore.QRect(10, 30, 281, 221))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.textBrowser_model.setFont(font)
        self.textBrowser_model.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.textBrowser_model.setObjectName("textBrowser_model")
        self.label_6 = QtWidgets.QLabel(self.frame)
        self.label_6.setGeometry(QtCore.QRect(20, 30, 421, 271))
        self.label_6.setText("")
        self.label_6.setPixmap(QtGui.QPixmap("assets/variables.png"))
        self.label_6.setScaledContents(True)
        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
        self.label_6.setObjectName("label_6")
        self.groupBox_12.raise_()
        self.groupBox.raise_()
        self.groupBox_8.raise_()
        self.label_6.raise_()
        self.tabWidget.addTab(self.Model, "")
        self.Optimizer = QtWidgets.QWidget()
        self.Optimizer.setObjectName("Optimizer")
        self.groupBox_9 = QtWidgets.QGroupBox(self.Optimizer)
        self.groupBox_9.setGeometry(QtCore.QRect(370, 230, 410, 240))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.groupBox_9.setFont(font)
        self.groupBox_9.setObjectName("groupBox_9")
        self.tableWidget_2 = QtWidgets.QTableWidget(self.groupBox_9)
        self.tableWidget_2.setGeometry(QtCore.QRect(20, 30, 361, 203))
        self.tableWidget_2.setMinimumSize(QtCore.QSize(331, 0))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.tableWidget_2.setFont(font)
        self.tableWidget_2.setObjectName("tableWidget_2")
        self.tableWidget_2.setColumnCount(2)
        self.tableWidget_2.setRowCount(5)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_2.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableWidget_2.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableWidget_2.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableWidget_2.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableWidget_2.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableWidget_2.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableWidget_2.setItem(2, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableWidget_2.setItem(3, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableWidget_2.setItem(3, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableWidget_2.setItem(4, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.tableWidget_2.setItem(4, 1, item)
        self.tableWidget_2.horizontalHeader().setCascadingSectionResizes(False)
        self.tableWidget_2.horizontalHeader().setMinimumSectionSize(160)
        self.tableWidget_2.verticalHeader().setDefaultSectionSize(30)
        self.tableWidget_2.verticalHeader().setHighlightSections(True)
        self.tableWidget_2.verticalHeader().setMinimumSectionSize(32)
        self.groupBox_3 = QtWidgets.QGroupBox(self.Optimizer)
        self.groupBox_3.setGeometry(QtCore.QRect(10, 10, 351, 391))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.groupBox_3.setFont(font)
        self.groupBox_3.setObjectName("groupBox_3")
        self.textBrowser = QtWidgets.QTextBrowser(self.groupBox_3)
        self.textBrowser.setGeometry(QtCore.QRect(10, 30, 331, 351))
        self.textBrowser.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.textBrowser.setTabStopWidth(79)
        self.textBrowser.setObjectName("textBrowser")
        self.pushButton = QtWidgets.QPushButton(self.Optimizer)
        self.pushButton.setGeometry(QtCore.QRect(100, 420, 171, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.tabWidget_2 = QtWidgets.QTabWidget(self.Optimizer)
        self.tabWidget_2.setGeometry(QtCore.QRect(370, 10, 411, 211))
        self.tabWidget_2.setTabPosition(QtWidgets.QTabWidget.East)
        self.tabWidget_2.setObjectName("tabWidget_2")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.groupBox_14 = QtWidgets.QGroupBox(self.tab)
        self.groupBox_14.setGeometry(QtCore.QRect(0, 0, 399, 207))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.groupBox_14.setFont(font)
        self.groupBox_14.setObjectName("groupBox_14")
        self.label_23 = QtWidgets.QLabel(self.groupBox_14)
        self.label_23.setGeometry(QtCore.QRect(10, 35, 157, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_23.setFont(font)
        self.label_23.setObjectName("label_23")
        self.LmReq_3 = QtWidgets.QSpinBox(self.groupBox_14)
        self.LmReq_3.setGeometry(QtCore.QRect(216, 35, 161, 24))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.LmReq_3.setFont(font)
        self.LmReq_3.setMinimum(2000)
        self.LmReq_3.setMaximum(89000)
        self.LmReq_3.setSingleStep(1000)
        self.LmReq_3.setProperty("value", 36000)
        self.LmReq_3.setDisplayIntegerBase(10)
        self.LmReq_3.setObjectName("LmReq_3")
        self.label_24 = QtWidgets.QLabel(self.groupBox_14)
        self.label_24.setGeometry(QtCore.QRect(10, 67, 137, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_24.setFont(font)
        self.label_24.setObjectName("label_24")
        self.SiReq_3 = QtWidgets.QSpinBox(self.groupBox_14)
        self.SiReq_3.setGeometry(QtCore.QRect(216, 67, 161, 24))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.SiReq_3.setFont(font)
        self.SiReq_3.setMaximum(350)
        self.SiReq_3.setSingleStep(10)
        self.SiReq_3.setProperty("value", 200)
        self.SiReq_3.setObjectName("SiReq_3")
        self.label_25 = QtWidgets.QLabel(self.groupBox_14)
        self.label_25.setGeometry(QtCore.QRect(10, 99, 200, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_25.setFont(font)
        self.label_25.setObjectName("label_25")
        self.Pmax_3 = QtWidgets.QSpinBox(self.groupBox_14)
        self.Pmax_3.setGeometry(QtCore.QRect(216, 99, 161, 24))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.Pmax_3.setFont(font)
        self.Pmax_3.setMaximum(500)
        self.Pmax_3.setSingleStep(50)
        self.Pmax_3.setProperty("value", 300)
        self.Pmax_3.setObjectName("Pmax_3")
        self.label_26 = QtWidgets.QLabel(self.groupBox_14)
        self.label_26.setGeometry(QtCore.QRect(10, 131, 171, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_26.setFont(font)
        self.label_26.setObjectName("label_26")
        self.doubleSpinBox_5 = QtWidgets.QDoubleSpinBox(self.groupBox_14)
        self.doubleSpinBox_5.setGeometry(QtCore.QRect(216, 131, 81, 24))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.doubleSpinBox_5.setFont(font)
        self.doubleSpinBox_5.setMinimum(0.5)
        self.doubleSpinBox_5.setMaximum(1.0)
        self.doubleSpinBox_5.setSingleStep(0.05)
        self.doubleSpinBox_5.setObjectName("doubleSpinBox_5")
        self.doubleSpinBox_6 = QtWidgets.QDoubleSpinBox(self.groupBox_14)
        self.doubleSpinBox_6.setGeometry(QtCore.QRect(306, 131, 71, 24))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.doubleSpinBox_6.setFont(font)
        self.doubleSpinBox_6.setMinimum(0.5)
        self.doubleSpinBox_6.setMaximum(1.0)
        self.doubleSpinBox_6.setSingleStep(0.05)
        self.doubleSpinBox_6.setProperty("value", 1.0)
        self.doubleSpinBox_6.setObjectName("doubleSpinBox_6")
        self.label_27 = QtWidgets.QLabel(self.groupBox_14)
        self.label_27.setGeometry(QtCore.QRect(10, 163, 69, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_27.setFont(font)
        self.label_27.setObjectName("label_27")
        self.comboBox_6 = QtWidgets.QComboBox(self.groupBox_14)
        self.comboBox_6.setGeometry(QtCore.QRect(216, 163, 161, 25))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.comboBox_6.setFont(font)
        self.comboBox_6.setObjectName("comboBox_6")
        self.comboBox_6.addItem("")
        self.comboBox_6.addItem("")
        self.comboBox_6.addItem("")
        self.tabWidget_2.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.groupBox_13 = QtWidgets.QGroupBox(self.tab_2)
        self.groupBox_13.setGeometry(QtCore.QRect(0, 0, 399, 207))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.groupBox_13.setFont(font)
        self.groupBox_13.setObjectName("groupBox_13")
        self.label_18 = QtWidgets.QLabel(self.groupBox_13)
        self.label_18.setGeometry(QtCore.QRect(10, 35, 157, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_18.setFont(font)
        self.label_18.setObjectName("label_18")
        self.LmReq_2 = QtWidgets.QSpinBox(self.groupBox_13)
        self.LmReq_2.setGeometry(QtCore.QRect(216, 35, 161, 24))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.LmReq_2.setFont(font)
        self.LmReq_2.setMinimum(8)
        self.LmReq_2.setMaximum(400)
        self.LmReq_2.setSingleStep(10)
        self.LmReq_2.setProperty("value", 160)
        self.LmReq_2.setDisplayIntegerBase(10)
        self.LmReq_2.setObjectName("LmReq_2")
        self.label_19 = QtWidgets.QLabel(self.groupBox_13)
        self.label_19.setGeometry(QtCore.QRect(10, 67, 151, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_19.setFont(font)
        self.label_19.setObjectName("label_19")
        self.SiReq_2 = QtWidgets.QSpinBox(self.groupBox_13)
        self.SiReq_2.setGeometry(QtCore.QRect(216, 67, 161, 24))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.SiReq_2.setFont(font)
        self.SiReq_2.setMaximum(570)
        self.SiReq_2.setSingleStep(50)
        self.SiReq_2.setProperty("value", 320)
        self.SiReq_2.setObjectName("SiReq_2")
        self.label_20 = QtWidgets.QLabel(self.groupBox_13)
        self.label_20.setGeometry(QtCore.QRect(10, 99, 200, 20))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_20.setFont(font)
        self.label_20.setObjectName("label_20")
        self.Pmax_2 = QtWidgets.QSpinBox(self.groupBox_13)
        self.Pmax_2.setGeometry(QtCore.QRect(216, 99, 161, 24))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.Pmax_2.setFont(font)
        self.Pmax_2.setMaximum(3500)
        self.Pmax_2.setSingleStep(100)
        self.Pmax_2.setProperty("value", 2000)
        self.Pmax_2.setObjectName("Pmax_2")
        self.label_21 = QtWidgets.QLabel(self.groupBox_13)
        self.label_21.setGeometry(QtCore.QRect(10, 131, 171, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_21.setFont(font)
        self.label_21.setObjectName("label_21")
        self.doubleSpinBox_3 = QtWidgets.QDoubleSpinBox(self.groupBox_13)
        self.doubleSpinBox_3.setGeometry(QtCore.QRect(216, 131, 81, 24))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.doubleSpinBox_3.setFont(font)
        self.doubleSpinBox_3.setMinimum(0.5)
        self.doubleSpinBox_3.setMaximum(1.0)
        self.doubleSpinBox_3.setSingleStep(0.05)
        self.doubleSpinBox_3.setObjectName("doubleSpinBox_3")
        self.doubleSpinBox_4 = QtWidgets.QDoubleSpinBox(self.groupBox_13)
        self.doubleSpinBox_4.setGeometry(QtCore.QRect(306, 131, 71, 24))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.doubleSpinBox_4.setFont(font)
        self.doubleSpinBox_4.setMinimum(0.5)
        self.doubleSpinBox_4.setMaximum(1.0)
        self.doubleSpinBox_4.setSingleStep(0.05)
        self.doubleSpinBox_4.setProperty("value", 1.0)
        self.doubleSpinBox_4.setObjectName("doubleSpinBox_4")
        self.label_22 = QtWidgets.QLabel(self.groupBox_13)
        self.label_22.setGeometry(QtCore.QRect(10, 163, 69, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_22.setFont(font)
        self.label_22.setObjectName("label_22")
        self.comboBox_5 = QtWidgets.QComboBox(self.groupBox_13)
        self.comboBox_5.setGeometry(QtCore.QRect(216, 163, 161, 25))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.comboBox_5.setFont(font)
        self.comboBox_5.setObjectName("comboBox_5")
        self.comboBox_5.addItem("")
        self.comboBox_5.addItem("")
        self.comboBox_5.addItem("")
        self.tabWidget_2.addTab(self.tab_2, "")
        self.tabWidget.addTab(self.Optimizer, "")
        self.Output = QtWidgets.QWidget()
        self.Output.setObjectName("Output")
        self.groupBox_4 = QtWidgets.QGroupBox(self.Output)
        self.groupBox_4.setGeometry(QtCore.QRect(10, 10, 251, 461))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.groupBox_4.setFont(font)
        self.groupBox_4.setObjectName("groupBox_4")
        self.textBrowser_2 = QtWidgets.QTextBrowser(self.groupBox_4)
        self.textBrowser_2.setGeometry(QtCore.QRect(10, 29, 231, 421))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.textBrowser_2.setFont(font)
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.pushButton_2 = QtWidgets.QPushButton(self.Output)
        self.pushButton_2.setGeometry(QtCore.QRect(460, 430, 130, 35))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setObjectName("pushButton_2")
        self.groupBox_11 = QtWidgets.QGroupBox(self.Output)
        self.groupBox_11.setGeometry(QtCore.QRect(270, 10, 521, 361))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.groupBox_11.setFont(font)
        self.groupBox_11.setObjectName("groupBox_11")
        self.tableWidget_3 = QtWidgets.QTableWidget(self.groupBox_11)
        self.tableWidget_3.setGeometry(QtCore.QRect(10, 30, 501, 331))
        self.tableWidget_3.setMinimumSize(QtCore.QSize(331, 0))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.tableWidget_3.setFont(font)
        self.tableWidget_3.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tableWidget_3.setObjectName("tableWidget_3")
        self.tableWidget_3.setColumnCount(4)
        self.tableWidget_3.setRowCount(9)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setVerticalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_3.setItem(0, 0, item)
        self.tableWidget_3.horizontalHeader().setCascadingSectionResizes(True)
        self.tableWidget_3.horizontalHeader().setSortIndicatorShown(False)
        self.tableWidget_3.verticalHeader().setCascadingSectionResizes(True)
        self.label_17 = QtWidgets.QLabel(self.Output)
        self.label_17.setGeometry(QtCore.QRect(280, 370, 501, 41))
        self.label_17.setTextFormat(QtCore.Qt.AutoText)
        self.label_17.setScaledContents(False)
        self.label_17.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_17.setWordWrap(True)
        self.label_17.setObjectName("label_17")
        self.label_28 = QtWidgets.QLabel(self.Output)
        self.label_28.setGeometry(QtCore.QRect(280, 400, 501, 31))
        self.label_28.setTextFormat(QtCore.Qt.AutoText)
        self.label_28.setScaledContents(False)
        self.label_28.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_28.setWordWrap(True)
        self.label_28.setObjectName("label_28")
        self.tabWidget.addTab(self.Output, "")
        self.gridLayout.addWidget(self.tabWidget, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        self.tabWidget_2.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Tire Optimizer"))
        self.groupBox.setTitle(_translate("MainWindow", "Design Variables"))
        self.label_12.setText(_translate("MainWindow", "Dm: mean tire diameter"))
        self.label_13.setText(_translate("MainWindow", "DF: outer wheel flange diameter"))
        self.label_14.setText(_translate("MainWindow", "D: rim diameter"))
        self.label_15.setText(_translate("MainWindow", "Wm: mean overall tire width"))
        self.label_16.setText(_translate("MainWindow", "N: ply rating"))
        self.groupBox_8.setTitle(_translate("MainWindow", "Terms of Service"))
        self.textBrowser_model_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'.AppleSystemUIFont\'; font-size:10pt;\">Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'.AppleSystemUIFont\'; font-size:10pt;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'.AppleSystemUIFont\'; font-size:10pt;\">The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'.AppleSystemUIFont\'; font-size:10pt;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'.AppleSystemUIFont\'; font-size:10pt;\">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</span></p></body></html>"))
        self.groupBox_12.setTitle(_translate("MainWindow", "Background"))
        self.textBrowser_model.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">This program is built to assist aircraft landing gear designers to explore optimized (lightest in weight) and mechanically feasible aircraft tires through advanced optimization algorithms. </p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Model), _translate("MainWindow", "Model"))
        self.groupBox_9.setTitle(_translate("MainWindow", "Optimization Scope"))
        item = self.tableWidget_2.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "Dm"))
        item = self.tableWidget_2.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "DF"))
        item = self.tableWidget_2.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "D"))
        item = self.tableWidget_2.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "Wm"))
        item = self.tableWidget_2.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "N"))
        item = self.tableWidget_2.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Lower Bound"))
        item = self.tableWidget_2.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Upper Bound"))
        __sortingEnabled = self.tableWidget_2.isSortingEnabled()
        self.tableWidget_2.setSortingEnabled(False)
        item = self.tableWidget_2.item(0, 0)
        item.setText(_translate("MainWindow", "12"))
        item = self.tableWidget_2.item(0, 1)
        item.setText(_translate("MainWindow", "56"))
        item = self.tableWidget_2.item(1, 0)
        item.setText(_translate("MainWindow", "5"))
        item = self.tableWidget_2.item(1, 1)
        item.setText(_translate("MainWindow", "33"))
        item = self.tableWidget_2.item(2, 0)
        item.setText(_translate("MainWindow", "4"))
        item = self.tableWidget_2.item(2, 1)
        item.setText(_translate("MainWindow", "24"))
        item = self.tableWidget_2.item(3, 0)
        item.setText(_translate("MainWindow", "4"))
        item = self.tableWidget_2.item(3, 1)
        item.setText(_translate("MainWindow", "21"))
        item = self.tableWidget_2.item(4, 0)
        item.setText(_translate("MainWindow", "4"))
        item = self.tableWidget_2.item(4, 1)
        item.setText(_translate("MainWindow", "38"))
        self.tableWidget_2.setSortingEnabled(__sortingEnabled)
        self.groupBox_3.setTitle(_translate("MainWindow", "Optimizer Instruction"))
        self.textBrowser.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:14pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt;\">1. Select a unit system in &quot;Optimization Parameter&quot; section. </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt;\">2. Enter optimization requirements in the selected units. </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt;\">3. Modified the lower and upper bounds of the variables, if needed. All dimensions (except N) are in the unit of inches.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:12pt;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:12pt;\">Note: changing the optimization scope may result in failure of optimization. </span></p></body></html>"))
        self.pushButton.setText(_translate("MainWindow", "Run Optimizer"))
        self.pushButton.clicked.connect(self.run_optimization)
        self.groupBox_14.setTitle(_translate("MainWindow", "Optimization Parameter"))
        self.label_23.setText(_translate("MainWindow", "Loading Capacity [lbs]"))
        self.label_24.setText(_translate("MainWindow", "Speed Index [mph]"))
        self.label_25.setText(_translate("MainWindow", "Max. Inflation Pressure [psi]"))
        self.label_26.setText(_translate("MainWindow", "Aspect Ratio (min, max)"))
        self.label_27.setText(_translate("MainWindow", "Tolerance"))
        self.comboBox_6.setCurrentText(_translate("MainWindow", "1e-4"))
        self.comboBox_6.setItemText(0, _translate("MainWindow", "1e-4"))
        self.comboBox_6.setItemText(1, _translate("MainWindow", "1e-5"))
        self.comboBox_6.setItemText(2, _translate("MainWindow", "1e-6"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab), _translate("MainWindow", "Imperial"))
        self.groupBox_13.setTitle(_translate("MainWindow", "Optimization Parameter"))
        self.label_18.setText(_translate("MainWindow", "Loading Capacity [kN]"))
        self.label_19.setText(_translate("MainWindow", "Speed Index [km/h]"))
        self.label_20.setText(_translate("MainWindow", "Max. Inflation Pressure [kPa]"))
        self.label_21.setText(_translate("MainWindow", "Aspect Ratio (min, max)"))
        self.label_22.setText(_translate("MainWindow", "Tolerance"))
        self.comboBox_5.setCurrentText(_translate("MainWindow", "1e-4"))
        self.comboBox_5.setItemText(0, _translate("MainWindow", "1e-4"))
        self.comboBox_5.setItemText(1, _translate("MainWindow", "1e-5"))
        self.comboBox_5.setItemText(2, _translate("MainWindow", "1e-6"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_2), _translate("MainWindow", "Metric"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Optimizer), _translate("MainWindow", "Optimizer"))
        self.groupBox_4.setTitle(_translate("MainWindow", "Optimizer Summary"))
        self.textBrowser_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'.AppleSystemUIFont\'; font-size:12pt;\">Please first run the optimizer in the &quot;Optimizer&quot; page. </span></p></body></html>"))
        self.pushButton_2.setText(_translate("MainWindow", "Save to CSV"))
        self.pushButton_2.clicked.connect(self.save_csv)
        self.groupBox_11.setTitle(_translate("MainWindow", "Optimization Output"))
        self.tableWidget_3.setSortingEnabled(False)
        item = self.tableWidget_3.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "Dm [in]"))
        item = self.tableWidget_3.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "DF [in]"))
        item = self.tableWidget_3.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "D [in]"))
        item = self.tableWidget_3.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "Wm [in]"))
        item = self.tableWidget_3.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "N"))
        item = self.tableWidget_3.verticalHeaderItem(5)
        item.setText(_translate("MainWindow", "Aspect Ratio"))
        item = self.tableWidget_3.verticalHeaderItem(6)
        item.setText(_translate("MainWindow", "Loading Capacity [lbs]"))
        item = self.tableWidget_3.verticalHeaderItem(7)
        item.setText(_translate("MainWindow", "Inflation Pressure [psi]"))
        item = self.tableWidget_3.verticalHeaderItem(8)
        item.setText(_translate("MainWindow", "Est. Tire Mass [kg]"))
        item = self.tableWidget_3.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Optimizer"))
        item = self.tableWidget_3.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Standardized*"))
        item = self.tableWidget_3.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Michelin**"))
        item = self.tableWidget_3.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Goodyear**"))
        __sortingEnabled = self.tableWidget_3.isSortingEnabled()
        self.tableWidget_3.setSortingEnabled(False)
        self.tableWidget_3.setSortingEnabled(__sortingEnabled)
        self.label_17.setText(_translate("MainWindow", "* Optimizer output dimensions standardized per TRA design guideline with performance recomputed. Satisfaction of requirements are not guaranteed."))
        self.label_28.setText(_translate("MainWindow", "** Lightest tires chosen from published manufacturer databook with requirements satisfied. "))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Output), _translate("MainWindow", "Output"))
        
    def show_warning(self, message): 
        msg = QtWidgets.QMessageBox()
        msg.setIcon(QtWidgets.QMessageBox.Warning)
        msg.setText("Warning")
        msg.setInformativeText(message)
        msg.setWindowTitle("Warning")
        msg.exec_()
    
    def show_complete(self, message): 
        msg = QtWidgets.QMessageBox()
        msg.setIcon(QtWidgets.QMessageBox.Information)
        msg.setText("Complete")
        msg.setInformativeText(message)
        msg.setWindowTitle("Complete")
        msg.exec_()
    
    def run_optimization(self): 
        def retrieve_tire_data(tire: Tire, source: str) -> Dict[str, float]: 
            """Retrieve tire dimensions and performance data in dictionary for output. 
            
            Args: 
            	tire (Tire): a Tire object from models.py. 
            	source (str): the source of the tire from {'optimizer', 'michelin', 'goodyear'}
            """
            output = {} 
            output['Dm'] = tire.Dm
            output['DF'] = tire.DF
            output['D'] = tire.D
            output['Wm'] = tire.Wm
            output['PR'] = tire.PR
            output['AR'] = tire.aspect_ratio()
            if source == "optimizer": 
                output['Lm'] = tire.max_load_capacity(exact=True)
                output['IP'] = tire.inflation_pressure() 
                output['Mass'] = tire.estimated_tire_mass()
            else: 
                output['Lm'] = tire.Lm
                if tire.IP: 
                    output['IP'] = tire.IP 
                else: 
                    output['IP'] = tire.inflation_pressure() 
                if source == "michelin": 
                    output['Mass'] = tire.estimated_tire_mass() 
                else: 
                    output['Mass'] = tire.mass
            return output 
        
        def standardize_tire(tire_data: Dict[str, float]) -> Dict[str, float]: 
            """Standardize all dimensions of the tire generated by the optimizer, 
            and recompute all tire performance. 
            
            Args:
            	tire_data (Dict[str, float]): output from retrieve_tire_data. 
            """
            output = {} 
            output['Dm'] = round(tire_data['Dm'] * 2) / 2 
            if tire_data['Wm'] < 10: 
                output['Wm'] = round(tire_data['Wm'] * 4) / 4 
            else: 
                output['Wm'] = round(tire_data['Wm'] * 2) / 2
            output['D'] = round(tire_data['D'])
            output['DF'] = round(tire_data['DF'] * 8) / 8 
            output['PR'] = round(tire_data['PR'])
            
            tire = Tire(Dm=output['Dm'], Wm=output['Wm'], D=output['D'], DF=output['DF'], PR=output['PR'])
            output['AR'] = tire.aspect_ratio()
            output['Lm'] = tire.max_load_capacity()
            output['IP'] = tire.inflation_pressure() 
            output['Mass'] = tire.estimated_tire_mass() 
            return output
        
        # Receive user inputs 
        self.scopes = {}
        for i, var in enumerate(['Dm', 'DF', 'D', 'Wm', 'PR']): 
            self.scopes[var] = (
                float(self.tableWidget_2.item(i, 0).text()), 
                float(self.tableWidget_2.item(i, 1).text()), 
                0 
            )
        
        if self.tabWidget_2.currentIndex() == 0: # imperial 
            self.unit = "imperial"
            self.Lm_req = float(self.LmReq_3.text())
            self.I_speed = float(self.SiReq_3.text()) 
            self.max_pressure = float(self.Pmax_3.text())
            self.tolerance = float(self.comboBox_6.itemText(self.comboBox_6.currentIndex()))
            self.aspect_ratio = [
                float(self.doubleSpinBox_5.text()), float(self.doubleSpinBox_6.text())
            ] # (min, max)
        else: # metric 
            self.unit = "metric"
            self.Lm_req = float(self.LmReq_2.text()) * 1000 / constants.lbf
            self.I_speed = float(self.SiReq_2.text()) / constants.mph * constants.kmh
            self.max_pressure = float(self.Pmax_2.text()) * 1e3 / constants.psi
            self.tolerance = float(self.comboBox_5.itemText(self.comboBox_5.currentIndex()))
            self.aspect_ratio = [
                float(self.doubleSpinBox_3.text()), float(self.doubleSpinBox_4.text())
            ] # (min, max)
        
        if self.aspect_ratio[0] >= self.aspect_ratio[1]: 
            self.show_warning("Aspect ratio min must be smaller than max!")
            return None 
        
        # Run optimizer 
        st = time.time() 
        self.opt_tire = optimizer.gradients_opt(
            self.Lm_req * 1.07, self.I_speed, self.max_pressure, self.scopes, self.aspect_ratio, self.tolerance
        )
        self.michelin_tire = optimizer.search_databook(self.Lm_req * 1.07, speed_index_des=self.I_speed, max_pressure=self.max_pressure, source='michelin')
        self.goodyear_tire = optimizer.search_databook(self.Lm_req * 1.07, speed_index_des=self.I_speed, max_pressure=self.max_pressure, source='goodyear')
        self.time_elapsed = time.time() - st
        self.time_complete = datetime.datetime.now()
        
        # Print summary of input 
        input_summary = f"""<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
        <html><head><meta name="qrichtext" content="1" /><style type="text/css">
        p, li {{ white-space: pre-wrap; }}
        </style></head><body style=" font-family:'.AppleSystemUIFont'; font-size:11pt; font-weight:400; font-style:normal;">"""
        if self.unit == "metric": 
            input_summary += "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><em>Note: optimization requirements were entered in metric units but converted and displayed in imperial units.</em></p><br />"
        
        input_summary += f"""<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><strong>Optimization input:</strong></p>
        <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Loading capacity [lbs]: {round(self.Lm_req)}</p>
        <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Speed index [mph]: {round(self.I_speed)}</p>
        <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Max inflation pressure [psi]: {round(self.max_pressure)}</p>
        <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Tolerance for termination: {self.tolerance}</p>
        <br /><p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><strong>Optimization scope:</strong></p>
        """
        for var in ['Dm', 'DF', 'D', 'Wm', 'PR']: 
            var_display = var if var != "PR" else "N"
            input_summary += f"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">{var_display}: [{self.scopes[var][0]}, {self.scopes[var][1]}]</p>"
        input_summary += f"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Aspect ratio: [{self.aspect_ratio[0]}, {self.aspect_ratio[1]}]</p><br />"
        
        input_summary += f"""<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><strong>Optimization details:</strong></p>
        <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Time elapsed: {round(self.time_elapsed, 4)} seconds</p>
        <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">Time completed: {self.time_complete.strftime("%Y-%m-%d %H:%M:%S")}</p>
        """
        
        input_summary += "</body></html>"
        self.textBrowser_2.setHtml(input_summary)
        
        # Print output 
        if self.opt_tire: 
            output = retrieve_tire_data(self.opt_tire, 'optimizer')
            standardized_output = standardize_tire(output)
            for i, var in enumerate(['Dm', 'DF', 'D', 'Wm', 'PR', "AR", "Lm", "IP", "Mass"]): 
                item = QtWidgets.QTableWidgetItem()
                item.setText(str(round(output[var], 3)))
                self.tableWidget_3.setItem(i, 0, item)
                item = QtWidgets.QTableWidgetItem()
                item.setText(str(round(standardized_output[var], 3)))
                self.tableWidget_3.setItem(i, 1, item)
        else: 
            for i in range(9):
                item = QtWidgets.QTableWidgetItem()
                item.setText("N/A")
                self.tableWidget_3.setItem(i, 0, item)
                self.tableWidget_3.setItem(i, 1, item)
                
        if self.michelin_tire: 
            output = retrieve_tire_data(self.michelin_tire, 'michelin')
            for i, var in enumerate(['Dm', 'DF', 'D', 'Wm', 'PR', "AR", "Lm", "IP", "Mass"]): 
                item = QtWidgets.QTableWidgetItem()
                item.setText(str(round(output[var], 3)))
                self.tableWidget_3.setItem(i, 2, item)
        else: 
            for i in range(9):
                item = QtWidgets.QTableWidgetItem()
                item.setText("N/A")
                self.tableWidget_3.setItem(i, 2, item)
                
        if self.goodyear_tire: 
            output = retrieve_tire_data(self.goodyear_tire, 'goodyear')
            for i, var in enumerate(['Dm', 'DF', 'D', 'Wm', 'PR', "AR", "Lm", "IP", "Mass"]): 
                item = QtWidgets.QTableWidgetItem()
                item.setText(str(round(output[var], 3)))
                self.tableWidget_3.setItem(i, 3, item)
        else: 
            for i in range(9):
                item = QtWidgets.QTableWidgetItem()
                item.setText("N/A")
                self.tableWidget_3.setItem(i, 3, item)
                
        # Redirect to Output page
        self.tabWidget.setCurrentIndex(2)
        
    def save_csv(self): 
        if not self.time_complete: 
            self.show_warning("Please run the optimizer before saving results in CSV.")
            return None 
        
        with open("opt_output_{}.csv".format(self.time_complete.strftime("%Y-%m-%d_%H-%M-%S")), "w") as csv_file: 
            csv_writer = csv.writer(csv_file)
            
            csv_writer.writerow(['Optimization details'])
            csv_writer.writerow(['Time completed', self.time_complete.strftime("%Y-%m-%d %H:%M:%S")])
            csv_writer.writerow(['Time elapsed', self.time_elapsed, 'seconds'])
            csv_writer.writerow(['Optimizer', 'SLSQP'])
            csv_writer.writerow(['Success', self.opt_tire != None])
            csv_writer.writerow(['Unit of input', self.unit, "(Note: results are always converted and reported in imperial)"])
            csv_writer.writerow([])
            
            csv_writer.writerow(['Optimization inputs'])
            csv_writer.writerow(["Loading capacity", self.Lm_req, "lbs"])
            csv_writer.writerow(["Speed index", self.I_speed, "mph"])
            csv_writer.writerow(["Max. inflation pressure", self.max_pressure, "psi"])
            csv_writer.writerow(["Tolerance for termination", self.tolerance])
            csv_writer.writerow([])
            
            csv_writer.writerow(['Optimization scope'])
            csv_writer.writerow(['Variable', 'Min', 'Max'])
            for var in ['Dm', 'DF', 'D', 'Wm', 'PR']: 
                var_display = var + " [in]" if var != "PR" else "N"
                csv_writer.writerow([var_display, self.scopes[var][0], self.scopes[var][1]])
            csv_writer.writerow(['Aspect ratio'] + self.aspect_ratio)
            csv_writer.writerow([])
            
            csv_writer.writerow(['Optimization results'])
            csv_writer.writerow(['', 'Optimizer', 'Standardized*', 'Michelin**', 'Goodyear**'])
            for i in range(9): 
                row = [self.tableWidget_3.verticalHeaderItem(i).text()] 
                for j in range(4): 
                    row.append(self.tableWidget_3.item(i, j).text())
                csv_writer.writerow(row)
                
            csv_writer.writerow(['*Optimizer output dimensions standardized per TRA design guideline with performance recomputed. Satisfaction of requirements is NOT guaranteed.'])
            csv_writer.writerow(['** Lightest tires chosen from published manufacturer databook with requirements satisfied.'])
            
            
        self.show_complete("CSV exported successfully!")
        
if __name__ == "__main__": 
    import sys
    import os  
    os.environ['QT_AUTO_SCREEN_SCALE_FACTOR'] = "1"
    os.environ['QT_SCALE_FACTOR'] = "1"
    os.environ['QT_ENABLE_HIGHDPI_SCALING'] = "1"
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow() 
    ui = Ui_MainWindow() 
    ui.setupUi(MainWindow)
    MainWindow.show() 
    sys.exit(app.exec_())